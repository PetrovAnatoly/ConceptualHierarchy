/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Dialogs;

import Generator.Generator;
import conceptualhierarchy.ActualData;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JFrame;
import Сoncepts.Concept;
import Сoncepts.DefConcept;

/**
 *
 * @author Anatoly
 */
public class GenerateDialog extends javax.swing.JDialog {

    /**
     * Creates new form GenerateDialog
     */
    public GenerateDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        conceptChooseComboBox.removeAllItems();
        conceptChooseComboBox.addItem("All concepts");
        for (Concept  concept: ActualData.getConcepts())
            if (!(concept instanceof DefConcept))
                conceptChooseComboBox.addItem(concept.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        constantCountMinTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        conceptChooseComboBox = new javax.swing.JComboBox();
        constantGenerateButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        constantCountMaxTextField = new javax.swing.JTextField();
        nestingProbabilityTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        conceptCountTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Генерация элементов");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Параметры:");

        jLabel2.setText("Количство констант:");

        jLabel3.setText("Концепт:");

        conceptChooseComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        constantGenerateButton.setText("Сгенерировать!");
        constantGenerateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                constantGenerateButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("-");

        jLabel6.setText("Вероятность вложенности (в процентах):");

        jLabel8.setText("Количество концептов:");

        jButton1.setText("Сгенерировать!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(constantGenerateButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(129, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(conceptChooseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(constantCountMinTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(constantCountMaxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(conceptCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nestingProbabilityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(constantCountMinTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(conceptChooseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(constantCountMaxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(constantGenerateButton)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nestingProbabilityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(conceptCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(276, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private static int getRandInt(int from, int to){
        return from + (new Random()).nextInt(to-from+1);
    }
    private void constantGenerateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_constantGenerateButtonActionPerformed
        // TODO add your handling code here:
        String conceptName = conceptChooseComboBox.getSelectedItem().toString();
        boolean forAll = false;
        if (conceptName.equals("All concepts"))
            forAll = true;
        String constantCountMinTextFieldValue = constantCountMinTextField.getText().trim();
        String constantCountMaxTextFieldValue = constantCountMaxTextField.getText().trim();
        int constantCountMin, constantCountMax;
        try{
            constantCountMin = Integer.valueOf(constantCountMinTextFieldValue);
            constantCountMax = Integer.valueOf(constantCountMaxTextFieldValue);
            ArrayList<Concept> concepts = new ArrayList<>();
            if (forAll)
                concepts = ActualData.getConcepts();
            else 
                concepts.add(ActualData.getConceptByName(conceptName));
            for (Concept concept: concepts){
                int count = getRandInt(constantCountMin, constantCountMax);
                int counter = 0;
                int id = 0;
                while (counter<count){
                    String constantName = "\'" + concept.getName() + String.valueOf(id) + "\'";
                    if (ActualData.avalibleConstantNameInDomen(constantName, concept)){
                        ActualData.addNewConstantInDomen(constantName, concept);
                        counter++;
                    }
                    id++;
                }
            }
            errorDialog errD = new errorDialog(new JFrame(), true, "Константы сгенерированы!");
            errD.setTitle("Сгенерировано");
            errD.setVisible(true);
        }
        catch (NumberFormatException ex){
            new errorDialog(new JFrame(), true, "Некорректный ввод!").setVisible(true);
        }
    }//GEN-LAST:event_constantGenerateButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String conceptCountFieldValue = conceptCountTextField.getText().trim();
        String nestingProbabilityFieldValue = nestingProbabilityTextField.getText().trim();
        try{
            int conceptCount = Integer.valueOf(conceptCountFieldValue);
            int nestingProbability = Integer.valueOf(nestingProbabilityFieldValue);
            Generator.generateConcepts(conceptCount, nestingProbability);
        }
        catch (NumberFormatException ex){
            new errorDialog(new JFrame(), true, "Некорректный ввод!").setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenerateDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenerateDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenerateDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenerateDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GenerateDialog dialog = new GenerateDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox conceptChooseComboBox;
    private javax.swing.JTextField conceptCountTextField;
    private javax.swing.JTextField constantCountMaxTextField;
    private javax.swing.JTextField constantCountMinTextField;
    private javax.swing.JButton constantGenerateButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField nestingProbabilityTextField;
    // End of variables declaration//GEN-END:variables
}
