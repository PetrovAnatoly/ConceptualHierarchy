/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Dialogs.ExtensionalDialogs;

import Frames.AbstractSimpleFrame;
import GUI.Models.ExtensionalTableModel;
import conceptualhierarchy.ActualData;
import conceptualhierarchy.Extensional;
import java.util.HashMap;
import Сoncepts.Constant;

/**
 *
 * @author Anatoly
 */
public class ViewFrameExtensionalDialog extends javax.swing.JDialog {

    /**
     * Creates new form ViewExtensionalDialog
     * @param parent
     * @param modal
     */
    public ViewFrameExtensionalDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        pack();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        frameNameField = new javax.swing.JTextField();
        predicateField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        extensionalTable = new javax.swing.JTable();
        addExtensionButton = new javax.swing.JButton();
        removeExtensionButton = new javax.swing.JButton();
        closedFrameMessage = new javax.swing.JLabel();
        closedFrameButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        quantorsField = new javax.swing.JTextField();
        predExtButton = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 400));

        jLabel2.setText("Имя фрейма:");

        jLabel4.setText("Предикат:");

        frameNameField.setEditable(false);
        frameNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frameNameFieldActionPerformed(evt);
            }
        });

        predicateField.setEditable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Означивания фрейма");

        extensionalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(extensionalTable);

        addExtensionButton.setText("Добавить подстановку");
        addExtensionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addExtensionButtonActionPerformed(evt);
            }
        });

        removeExtensionButton.setText("Удалить подстановку");
        removeExtensionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeExtensionButtonActionPerformed(evt);
            }
        });

        closedFrameMessage.setText("message");

        closedFrameButton.setText("Получить");
        closedFrameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closedFrameButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Кванторы:");

        quantorsField.setEditable(false);

        predExtButton.setText("Посмотреть все означивания предиката");
        predExtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                predExtButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addExtensionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeExtensionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantorsField)
                            .addComponent(frameNameField)
                            .addComponent(predicateField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(closedFrameMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closedFrameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(predExtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frameNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(quantorsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(predicateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(predExtButton)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closedFrameMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closedFrameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeExtensionButton)
                    .addComponent(addExtensionButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void frameNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frameNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frameNameFieldActionPerformed

    private void addExtensionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addExtensionButtonActionPerformed
        // TODO add your handling code here:
        AddExtensionDialog addExtDialog = new AddExtensionDialog(new java.awt.Frame(), true);
        addExtDialog.setFrame(frame);
        addExtDialog.setVisible(true);
        // !!
        if (addExtDialog.extensionIsAdded()){
            myTableModel.addRow(addExtDialog.getAddedExtension());
            extensional.addExtension(addExtDialog.getAddedExtension());
        }
    }//GEN-LAST:event_addExtensionButtonActionPerformed

    private void removeExtensionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeExtensionButtonActionPerformed
        // TODO add your handling code here:
        int rowIndex = extensionalTable.getSelectedRow();
        if (rowIndex == -1)
            return;
        HashMap<String, String> extensionLine = new HashMap();
        for (int i = 0; i < extensionalTable.getColumnCount(); i++){
            String role = extensionalTable.getColumnName(i);
            String constName = (String) extensionalTable.getValueAt(rowIndex, i);
            extensionLine.put(role, constName);
        }
        HashMap<String, Constant> extension = extensional.getExtension(extensionLine);
        extensional.removeExtension(extension);
        ActualData.getExtensional(frame.getPredicate()).removeExtension(extension);
        myTableModel.removeRow(rowIndex);
    }//GEN-LAST:event_removeExtensionButtonActionPerformed

    private void closedFrameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closedFrameButtonActionPerformed
        // TODO add your handling code here:
        extensional = ActualData.deduceExtensional(frame);
        myTableModel = new ExtensionalTableModel(frame, extensional);
        extensionalTable.setModel(myTableModel);
        closedFrameButton.setVisible(false);
        closedFrameMessage.setText("Полученные означивания не сохранятся");
        removeExtensionButton.setEnabled(false);
    }//GEN-LAST:event_closedFrameButtonActionPerformed

    private void predExtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_predExtButtonActionPerformed
        // TODO add your handling code here:
        ViewPredicateExtensionalDialog viewPrExD = new ViewPredicateExtensionalDialog(new java.awt.Frame(), true);
        viewPrExD.setPredicate(frame.getPredicate());
        viewPrExD.setVisible(true);
    }//GEN-LAST:event_predExtButtonActionPerformed
    private AbstractSimpleFrame frame;
    private ExtensionalTableModel myTableModel;
    private Extensional extensional;
    
    public void setFrame(AbstractSimpleFrame arg){
        frame = arg;
        extensional = new Extensional(frame);
        myTableModel = new ExtensionalTableModel(frame, extensional);
        frameNameField.setText(frame.getName());
        quantorsField.setText(frame.getQuantorsLine());
        predicateField.setText(frame.getPredicate());
        if (frame.isClosed()){
            closedFrameMessage.setVisible(true);
            if (ActualData.frameExtensionalIsGettable(frame)){
                closedFrameMessage.setText("Конфигурация не противоречит фрейму");
                closedFrameButton.setVisible(false);
                extensional = ActualData.getLastExtensionalCheckResult();
                myTableModel = new ExtensionalTableModel(frame, extensional);
                extensionalTable.setModel(myTableModel); 
            }
            else {
                if (ActualData.frameExtensionalIsDeducible(frame)){
                    closedFrameMessage.setText("Конфигурация противоречит фрейму, означивания выводимы");
                    closedFrameButton.setVisible(true);
                }
                else {
                    closedFrameMessage.setText("Конфигурация противоречит фрейму и означивания невыводимы");
                    closedFrameButton.setVisible(false);
                }
            }
        }
        else {
            closedFrameMessage.setText("Фрейм является открытым, означивания приведены в таблице");
            closedFrameMessage.setVisible(true);
            closedFrameButton.setVisible(false);
            extensionalTable.setVisible(true);
            extensional = ActualData.getExtensional(frame);
            myTableModel = new ExtensionalTableModel(frame, extensional);
            extensionalTable.setModel(myTableModel);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewFrameExtensionalDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewFrameExtensionalDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewFrameExtensionalDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewFrameExtensionalDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ViewFrameExtensionalDialog dialog = new ViewFrameExtensionalDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addExtensionButton;
    private javax.swing.JButton closedFrameButton;
    private javax.swing.JLabel closedFrameMessage;
    private javax.swing.JTable extensionalTable;
    private javax.swing.JTextField frameNameField;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton predExtButton;
    private javax.swing.JTextField predicateField;
    private javax.swing.JTextField quantorsField;
    private javax.swing.JButton removeExtensionButton;
    // End of variables declaration//GEN-END:variables
}
